<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.mapper.OrdersMapper">

    <!-- 映射 OrdersModel 与 GoodsModel 的嵌套关系 -->
    <resultMap id="OrdersWithGoodsResultMap" type="com.project.model.OrdersModel">
        <id property="orderID" column="order_id"/>
        <result property="orderTime" column="order_time"/>
        <result property="customerName" column="customer_name"/>
        <result property="purchaseNum" column="purchase_num"/>
        <result property="totalPrice" column="total_price"/>

        <!-- 外键关联的商品对象 -->
        <association property="good" javaType="com.project.model.GoodsModel">
            <id property="goodID" column="good_id"/>
            <result property="goodName" column="good_name"/>
            <result property="goodPrice" column="good_price"/>
            <result property="goodSize" column="good_size"/>
        </association>
    </resultMap>

    <!-- 插入订单：嵌套 good 的属性 -->
    <insert id="create" parameterType="com.project.model.OrdersModel">
        INSERT INTO orders (
            order_id,
            order_time,
            customer_name,
            good_id,
            purchase_num,
            total_price
        ) VALUES (
                     #{orderID},
                     #{orderTime},
                     #{customerName},
                     #{good.goodID},
                     #{purchaseNum},
                     #{totalPrice}
                 )
    </insert>

    <!-- 查询所有订单（JOIN 商品表） -->
    <select id="getAllOrders" resultMap="OrdersWithGoodsResultMap">
        SELECT
            o.order_id,
            o.order_time,
            o.customer_name,
            o.purchase_num,
            o.total_price,
            g.good_id,
            g.good_name,
            g.good_price,
            g.good_size
        FROM orders o
                 JOIN goods g ON o.good_id = g.good_id
        ORDER BY o.order_time DESC
    </select>

    <!-- 根据ID查询订单 -->
    <select id="getById" parameterType="String" resultMap="OrdersWithGoodsResultMap">
        SELECT
            o.order_id,
            o.order_time,
            o.customer_name,
            o.purchase_num,
            o.total_price,
            g.good_id,
            g.good_name,
            g.good_price,
            g.good_size
        FROM orders o
                 JOIN goods g ON o.good_id = g.good_id
        WHERE o.order_id = #{orderId}
        ORDER BY o.order_time DESC
    </select>

    <!-- 分页查询订单（修正：添加 JOIN） -->
    <select id="getOrdersByPage" resultMap="OrdersWithGoodsResultMap">
        SELECT
            o.order_id,
            o.order_time,
            o.customer_name,
            o.purchase_num,
            o.total_price,
            g.good_id,
            g.good_name,
            g.good_price,
            g.good_size
        FROM orders o
                 JOIN goods g ON o.good_id = g.good_id
        ORDER BY o.order_time DESC
        LIMIT #{offset}, #{pageSize}
    </select>

    <!-- 根据时间段查询订单（修正：添加 JOIN） -->
    <select id="getOrderByTime" resultMap="OrdersWithGoodsResultMap">
        SELECT
            o.order_id,
            o.order_time,
            o.customer_name,
            o.purchase_num,
            o.total_price,
            g.good_id,
            g.good_name,
            g.good_price,
            g.good_size
        FROM orders o
                 JOIN goods g ON o.good_id = g.good_id
        WHERE o.order_time BETWEEN #{startTime} AND #{endTime}
        ORDER BY o.order_time DESC
    </select>

    <!-- 物理删除订单 -->
    <delete id="delete" parameterType="String">
        DELETE FROM orders
        WHERE order_id = #{orderId}
    </delete>
</mapper>
